name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install composer and dependencies
        uses: php-actions/composer@v6

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: coverage
        with:
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml
          php_extensions: xdebug
          php_version: 8.0
          version: 9
          args: tests --coverage-clover ./phpunit-coverage.xml --log-junit=phpunit-report.xml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-reports
          path: |
            ./phpunit-coverage.xml
            ./phpunit-report.xml

  phpcs:
    name: PHP Code Sniffer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Composer install
        uses: php-actions/composer@v6

      - name: PHP Code Sniffer
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.0
          path: src/
          standard: PSR12
          report: full

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Composer install
        uses: php-actions/composer@v6

      - uses: php-actions/phpstan@v3
        with:
          path: src/
          php_version: 8.0
          configuration: phpstan.neon
          error_format: gitlab

  phpmd:
    name: PHP Mess Detector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: 8.0
          tools: phpmd

      - name: Composer install
        uses: php-actions/composer@v6

      - name: PHP Mess Detector
        run: phpmd . github phpmd.xml --exclude 'tests/*,vendor/*'

  codecov:
    name: CodeCov
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: phpunit-reports

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./phpunit-coverage.xml
          verbose: true

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: phpunit-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  qodana:
    name: Quodana
    runs-on: ubuntu-latest
    needs:
      - test
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2023.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
